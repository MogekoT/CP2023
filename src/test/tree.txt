Program
{
  translation_unit
  {
    external_declaration
    {
      function_definition
      {
        type_specifier
        {
          INT
        }
        declarator
        {
          declarator
          {
            IDENTIFIER
          }
          (
          parameter_list
          {
            parameter_declaration
            {
              type_specifier
              {
                VOID
              }
            }
          }
          )
        }
        compound_statement
        {
          {
          block_item_list
          {
            block_item_list
            {
              block_item
              {
                declaration
                {
                  type_specifier
                  {
                    INT
                  }
                  init_declarator_list
                  {
                    init_declarator_list
                    {
                      init_declarator
                      {
                        declarator
                        {
                          IDENTIFIER
                        }
                      }
                    }
                    ,
                    init_declarator
                    {
                      declarator
                      {
                        IDENTIFIER
                      }
                    }
                  }
                  ;
                }
              }
            }
            block_item
            {
              statement
              {
                expression_statement
                {
                  expression
                  {
                    assignment_expression
                    {
                      logical_or_expression
                      {
                        logical_and_expression
                        {
                          inclusive_or_expression
                          {
                            exclusive_or_expression
                            {
                              and_expression
                              {
                                equality_expression
                                {
                                  relational_expression
                                  {
                                    shift_expression
                                    {
                                      additive_expression
                                      {
                                        multiplicative_expression
                                        {
                                          unary_expression
                                          {
                                            postfix_expression
                                            {
                                              postfix_expression
                                              {
                                                primary_expression
                                                {
                                                  IDENTIFIER
                                                }
                                              }
                                              (
                                              argument_expression_list
                                              {
                                                argument_expression_list
                                                {
                                                  argument_expression_list
                                                  {
                                                    assignment_expression
                                                    {
                                                      logical_or_expression
                                                      {
                                                        logical_and_expression
                                                        {
                                                          inclusive_or_expression
                                                          {
                                                            exclusive_or_expression
                                                            {
                                                              and_expression
                                                              {
                                                                equality_expression
                                                                {
                                                                  relational_expression
                                                                  {
                                                                    shift_expression
                                                                    {
                                                                      additive_expression
                                                                      {
                                                                        multiplicative_expression
                                                                        {
                                                                          unary_expression
                                                                          {
                                                                            postfix_expression
                                                                            {
                                                                              primary_expression
                                                                              {
                                                                                STRING_LITERAL
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                  ,
                                                  assignment_expression
                                                  {
                                                    logical_or_expression
                                                    {
                                                      logical_and_expression
                                                      {
                                                        inclusive_or_expression
                                                        {
                                                          exclusive_or_expression
                                                          {
                                                            and_expression
                                                            {
                                                              equality_expression
                                                              {
                                                                relational_expression
                                                                {
                                                                  shift_expression
                                                                  {
                                                                    additive_expression
                                                                    {
                                                                      multiplicative_expression
                                                                      {
                                                                        unary_expression
                                                                        {
                                                                          postfix_expression
                                                                          {
                                                                            primary_expression
                                                                            {
                                                                              IDENTIFIER
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                                ,
                                                assignment_expression
                                                {
                                                  logical_or_expression
                                                  {
                                                    logical_and_expression
                                                    {
                                                      inclusive_or_expression
                                                      {
                                                        exclusive_or_expression
                                                        {
                                                          and_expression
                                                          {
                                                            equality_expression
                                                            {
                                                              relational_expression
                                                              {
                                                                shift_expression
                                                                {
                                                                  additive_expression
                                                                  {
                                                                    multiplicative_expression
                                                                    {
                                                                      unary_expression
                                                                      {
                                                                        postfix_expression
                                                                        {
                                                                          primary_expression
                                                                          {
                                                                            IDENTIFIER
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              )
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  ;
                }
              }
            }
          }
          }
        }
      }
    }
  }
}
